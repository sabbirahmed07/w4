{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\"; //add a post\n\nexport var addPost = function addPost(postData) {\n  return function (dispatch) {\n    dispatch(clearErrors());\n    axios.post(\"/api/posts\", postData).then(function (res) {\n      return dispatch({\n        type: actionTypes.ADD_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: actionTypes.GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //get posts\n\nexport var getPosts = function getPosts() {\n  return function (dispatch) {\n    dispatch(setPostLoading());\n    axios.get(\"/api/posts\").then(function (res) {\n      return dispatch({\n        type: actionTypes.GET_POSTS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: actionTypes.GET_POSTS,\n        payload: null\n      });\n    });\n  };\n}; //get a single post\n\nexport var getPost = function getPost(id) {\n  return function (dispatch) {\n    dispatch(setPostLoading());\n    axios.get(\"/api/posts/\".concat(id)).then(function (res) {\n      return dispatch({\n        type: actionTypes.GET_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: actionTypes.GET_POST,\n        payload: null\n      });\n    });\n  };\n}; //delete a post\n\nexport var deletePost = function deletePost(id) {\n  return function (dispatch) {\n    axios.delete(\"/api/posts/\".concat(id)).then(function (res) {\n      return dispatch({\n        type: actionTypes.DELETE_POST,\n        payload: id\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: actionTypes.GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //add like to a post\n\nexport var addLike = function addLike(id) {\n  return function (dispatch) {\n    axios.post(\"/api/posts/like/\".concat(id)).then(function (res) {\n      return dispatch(getPosts());\n    }).catch(function (err) {\n      return dispatch({\n        type: actionTypes.GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //add unlike to a post\n\nexport var removeLike = function removeLike(id) {\n  return function (dispatch) {\n    axios.post(\"/api/posts/unlike/\".concat(id)).then(function (res) {\n      return dispatch(getPosts());\n    }).catch(function (err) {\n      return dispatch({\n        type: actionTypes.GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //add a comment\n\nexport var addComment = function addComment(postId, commentData) {\n  return function (dispatch) {\n    dispatch(clearErrors());\n    axios.post(\"/api/posts/comment/\".concat(postId), commentData).then(function (res) {\n      return dispatch({\n        type: actionTypes.GET_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: actionTypes.GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //delet a comment\n\nexport var deleteComment = function deleteComment(postId, commentId) {\n  return function (dispatch) {\n    axios.delete(\"/api/posts/comment/\".concat(postId, \"/\").concat(commentId)).then(function (res) {\n      return dispatch({\n        type: actionTypes.GET_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: actionTypes.GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //set loading post\n\nexport var setPostLoading = function setPostLoading() {\n  return function (dispatch) {\n    return {\n      type: actionTypes.POST_LOADING\n    };\n  };\n}; // clear errors\n\nexport var clearErrors = function clearErrors() {\n  return function (dispatch) {\n    return {\n      type: actionTypes.CLEAR_ERRORS\n    };\n  };\n};","map":{"version":3,"sources":["/home/sabbir/Downloads/bishudigital-master/client/src/redux/actions/postActions.js"],"names":["axios","actionTypes","addPost","postData","dispatch","clearErrors","post","then","res","type","ADD_POST","payload","data","catch","err","GET_ERRORS","response","getPosts","setPostLoading","get","GET_POSTS","getPost","id","GET_POST","deletePost","delete","DELETE_POST","addLike","removeLike","addComment","postId","commentData","deleteComment","commentId","POST_LOADING","CLEAR_ERRORS"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B,C,CAEA;;AACA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,QAAQ;AAAA,SAAI,UAAAC,QAAQ,EAAI;AAC7CA,IAAAA,QAAQ,CAACC,WAAW,EAAZ,CAAR;AACAL,IAAAA,KAAK,CACFM,IADH,CACQ,YADR,EACsBH,QADtB,EAEGI,IAFH,CAEQ,UAAAC,GAAG;AAAA,aACPJ,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAER,WAAW,CAACS,QADX;AAEPC,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,OAAD,CADD;AAAA,KAFX,EAQGC,KARH,CAQS,UAAAC,GAAG;AAAA,aACRV,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAER,WAAW,CAACc,UADX;AAEPJ,QAAAA,OAAO,EAAEG,GAAG,CAACE,QAAJ,CAAaJ;AAFf,OAAD,CADA;AAAA,KARZ;AAcD,GAhB8B;AAAA,CAAxB,C,CAkBP;;AACA,OAAO,IAAMK,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAM,UAAAb,QAAQ,EAAI;AACxCA,IAAAA,QAAQ,CAACc,cAAc,EAAf,CAAR;AACAlB,IAAAA,KAAK,CACFmB,GADH,CACO,YADP,EAEGZ,IAFH,CAEQ,UAAAC,GAAG;AAAA,aACPJ,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAER,WAAW,CAACmB,SADX;AAEPT,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,OAAD,CADD;AAAA,KAFX,EAQGC,KARH,CAQS,UAAAC,GAAG;AAAA,aACRV,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAER,WAAW,CAACmB,SADX;AAEPT,QAAAA,OAAO,EAAE;AAFF,OAAD,CADA;AAAA,KARZ;AAcD,GAhBuB;AAAA,CAAjB,C,CAkBP;;AACA,OAAO,IAAMU,OAAO,GAAG,SAAVA,OAAU,CAAAC,EAAE;AAAA,SAAI,UAAAlB,QAAQ,EAAI;AACvCA,IAAAA,QAAQ,CAACc,cAAc,EAAf,CAAR;AACAlB,IAAAA,KAAK,CACFmB,GADH,sBACqBG,EADrB,GAEGf,IAFH,CAEQ,UAAAC,GAAG;AAAA,aACPJ,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAER,WAAW,CAACsB,QADX;AAEPZ,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,OAAD,CADD;AAAA,KAFX,EAQGC,KARH,CAQS,UAAAC,GAAG;AAAA,aACRV,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAER,WAAW,CAACsB,QADX;AAEPZ,QAAAA,OAAO,EAAE;AAFF,OAAD,CADA;AAAA,KARZ;AAcD,GAhBwB;AAAA,CAAlB,C,CAkBP;;AACA,OAAO,IAAMa,UAAU,GAAG,SAAbA,UAAa,CAAAF,EAAE;AAAA,SAAI,UAAAlB,QAAQ,EAAI;AAC1CJ,IAAAA,KAAK,CACFyB,MADH,sBACwBH,EADxB,GAEGf,IAFH,CAEQ,UAAAC,GAAG;AAAA,aACPJ,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAER,WAAW,CAACyB,WADX;AAEPf,QAAAA,OAAO,EAAEW;AAFF,OAAD,CADD;AAAA,KAFX,EAQGT,KARH,CAQS,UAAAC,GAAG;AAAA,aACRV,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAER,WAAW,CAACc,UADX;AAEPJ,QAAAA,OAAO,EAAEG,GAAG,CAACE,QAAJ,CAAaJ;AAFf,OAAD,CADA;AAAA,KARZ;AAcD,GAf2B;AAAA,CAArB,C,CAiBP;;AACA,OAAO,IAAMe,OAAO,GAAG,SAAVA,OAAU,CAAAL,EAAE;AAAA,SAAI,UAAAlB,QAAQ,EAAI;AACvCJ,IAAAA,KAAK,CACFM,IADH,2BAC2BgB,EAD3B,GAEGf,IAFH,CAEQ,UAAAC,GAAG;AAAA,aAAIJ,QAAQ,CAACa,QAAQ,EAAT,CAAZ;AAAA,KAFX,EAGGJ,KAHH,CAGS,UAAAC,GAAG;AAAA,aACRV,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAER,WAAW,CAACc,UADX;AAEPJ,QAAAA,OAAO,EAAEG,GAAG,CAACE,QAAJ,CAAaJ;AAFf,OAAD,CADA;AAAA,KAHZ;AASD,GAVwB;AAAA,CAAlB,C,CAYP;;AACA,OAAO,IAAMgB,UAAU,GAAG,SAAbA,UAAa,CAAAN,EAAE;AAAA,SAAI,UAAAlB,QAAQ,EAAI;AAC1CJ,IAAAA,KAAK,CACFM,IADH,6BAC6BgB,EAD7B,GAEGf,IAFH,CAEQ,UAAAC,GAAG;AAAA,aAAIJ,QAAQ,CAACa,QAAQ,EAAT,CAAZ;AAAA,KAFX,EAGGJ,KAHH,CAGS,UAAAC,GAAG;AAAA,aACRV,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAER,WAAW,CAACc,UADX;AAEPJ,QAAAA,OAAO,EAAEG,GAAG,CAACE,QAAJ,CAAaJ;AAFf,OAAD,CADA;AAAA,KAHZ;AASD,GAV2B;AAAA,CAArB,C,CAYP;;AACA,OAAO,IAAMiB,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAASC,WAAT;AAAA,SAAyB,UAAA3B,QAAQ,EAAI;AAC7DA,IAAAA,QAAQ,CAACC,WAAW,EAAZ,CAAR;AACAL,IAAAA,KAAK,CACFM,IADH,8BAC8BwB,MAD9B,GACwCC,WADxC,EAEGxB,IAFH,CAEQ,UAAAC,GAAG;AAAA,aACPJ,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAER,WAAW,CAACsB,QADX;AAEPZ,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,OAAD,CADD;AAAA,KAFX,EAQGC,KARH,CAQS,UAAAC,GAAG;AAAA,aACRV,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAER,WAAW,CAACc,UADX;AAEPJ,QAAAA,OAAO,EAAEG,GAAG,CAACE,QAAJ,CAAaJ;AAFf,OAAD,CADA;AAAA,KARZ;AAcD,GAhByB;AAAA,CAAnB,C,CAkBP;;AACA,OAAO,IAAMoB,aAAa,GAAG,SAAhBA,aAAgB,CAACF,MAAD,EAASG,SAAT;AAAA,SAAuB,UAAA7B,QAAQ,EAAI;AAC9DJ,IAAAA,KAAK,CACFyB,MADH,8BACgCK,MADhC,cAC0CG,SAD1C,GAEG1B,IAFH,CAEQ,UAAAC,GAAG;AAAA,aACPJ,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAER,WAAW,CAACsB,QADX;AAEPZ,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,OAAD,CADD;AAAA,KAFX,EAQGC,KARH,CAQS,UAAAC,GAAG;AAAA,aACRV,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAER,WAAW,CAACc,UADX;AAEPJ,QAAAA,OAAO,EAAEG,GAAG,CAACE,QAAJ,CAAaJ;AAFf,OAAD,CADA;AAAA,KARZ;AAcD,GAf4B;AAAA,CAAtB,C,CAiBP;;AACA,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAM,UAAAd,QAAQ,EAAI;AAC9C,WAAO;AACLK,MAAAA,IAAI,EAAER,WAAW,CAACiC;AADb,KAAP;AAGD,GAJ6B;AAAA,CAAvB,C,CAMP;;AACA,OAAO,IAAM7B,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,UAAAD,QAAQ,EAAI;AAC3C,WAAO;AACLK,MAAAA,IAAI,EAAER,WAAW,CAACkC;AADb,KAAP;AAGD,GAJ0B;AAAA,CAApB","sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\n\n//add a post\nexport const addPost = postData => dispatch => {\n  dispatch(clearErrors());\n  axios\n    .post(\"/api/posts\", postData)\n    .then(res =>\n      dispatch({\n        type: actionTypes.ADD_POST,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: actionTypes.GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//get posts\nexport const getPosts = () => dispatch => {\n  dispatch(setPostLoading());\n  axios\n    .get(\"/api/posts\")\n    .then(res =>\n      dispatch({\n        type: actionTypes.GET_POSTS,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: actionTypes.GET_POSTS,\n        payload: null\n      })\n    );\n};\n\n//get a single post\nexport const getPost = id => dispatch => {\n  dispatch(setPostLoading());\n  axios\n    .get(`/api/posts/${id}`)\n    .then(res =>\n      dispatch({\n        type: actionTypes.GET_POST,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: actionTypes.GET_POST,\n        payload: null\n      })\n    );\n};\n\n//delete a post\nexport const deletePost = id => dispatch => {\n  axios\n    .delete(`/api/posts/${id}`)\n    .then(res =>\n      dispatch({\n        type: actionTypes.DELETE_POST,\n        payload: id\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: actionTypes.GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//add like to a post\nexport const addLike = id => dispatch => {\n  axios\n    .post(`/api/posts/like/${id}`)\n    .then(res => dispatch(getPosts()))\n    .catch(err =>\n      dispatch({\n        type: actionTypes.GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//add unlike to a post\nexport const removeLike = id => dispatch => {\n  axios\n    .post(`/api/posts/unlike/${id}`)\n    .then(res => dispatch(getPosts()))\n    .catch(err =>\n      dispatch({\n        type: actionTypes.GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//add a comment\nexport const addComment = (postId, commentData) => dispatch => {\n  dispatch(clearErrors());\n  axios\n    .post(`/api/posts/comment/${postId}`, commentData)\n    .then(res =>\n      dispatch({\n        type: actionTypes.GET_POST,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: actionTypes.GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//delet a comment\nexport const deleteComment = (postId, commentId) => dispatch => {\n  axios\n    .delete(`/api/posts/comment/${postId}/${commentId}`)\n    .then(res =>\n      dispatch({\n        type: actionTypes.GET_POST,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: actionTypes.GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//set loading post\nexport const setPostLoading = () => dispatch => {\n  return {\n    type: actionTypes.POST_LOADING\n  };\n};\n\n// clear errors\nexport const clearErrors = () => dispatch => {\n  return {\n    type: actionTypes.CLEAR_ERRORS\n  };\n};\n"]},"metadata":{},"sourceType":"module"}