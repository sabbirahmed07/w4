{"ast":null,"code":"import _defineProperty from \"/home/sabbir/Downloads/bishudigital-master/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/sabbir/Downloads/bishudigital-master/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sabbir/Downloads/bishudigital-master/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sabbir/Downloads/bishudigital-master/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sabbir/Downloads/bishudigital-master/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sabbir/Downloads/bishudigital-master/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/sabbir/Downloads/bishudigital-master/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/sabbir/Downloads/bishudigital-master/client/src/containers/post/CommentForm.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport TextAreaFieldGroup from \"../../components/common/TextAreaFieldGroup\";\nimport { addComment } from \"../../redux/actions/postActions\";\n\nvar CommentForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentForm, _Component);\n\n  function CommentForm(props) {\n    var _this;\n\n    _classCallCheck(this, CommentForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentForm).call(this, props));\n    _this.state = {\n      text: \"\",\n      errors: {}\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CommentForm, [{\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var user = this.props.auth.user;\n      var postId = this.props.postId;\n      var newComment = {\n        text: this.state.text,\n        name: user.name,\n        avatar: user.avatar,\n        user: user.id\n      };\n      this.props.addComment(postId, newComment);\n      this.setState({\n        text: \"\"\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      if (newProps.errors) {\n        this.setState({\n          errors: newProps.errors\n        });\n      }\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      return React.createElement(\"div\", {\n        className: \"post-form mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card card-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header bg-info text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Make a comment...\"), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(TextAreaFieldGroup, {\n        placeholder: \"Reply to post\",\n        name: \"text\",\n        value: this.state.text,\n        errors: errors.text,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return CommentForm;\n}(Component);\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  postId: PropTypes.string.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addComment: addComment\n})(CommentForm);","map":{"version":3,"sources":["/home/sabbir/Downloads/bishudigital-master/client/src/containers/post/CommentForm.js"],"names":["React","Component","PropTypes","connect","TextAreaFieldGroup","addComment","CommentForm","props","state","text","errors","onSubmit","bind","onChange","e","preventDefault","user","auth","postId","newComment","name","avatar","id","setState","newProps","target","value","propTypes","func","isRequired","object","string","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport TextAreaFieldGroup from \"../../components/common/TextAreaFieldGroup\";\nimport { addComment } from \"../../redux/actions/postActions\";\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: \"\",\n      errors: {}\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const { user } = this.props.auth;\n    const { postId } = this.props;\n\n    const newComment = {\n      text: this.state.text,\n      name: user.name,\n      avatar: user.avatar,\n      user: user.id\n    };\n\n    this.props.addComment(postId, newComment);\n    this.setState({\n      text: \"\"\n    });\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.errors) {\n      this.setState({\n        errors: newProps.errors\n      });\n    }\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"post-form mb-3\">\n        <div className=\"card card-info\">\n          <div className=\"card-header bg-info text-white\">\n            Make a comment...\n          </div>\n          <div className=\"card-body\">\n            <form onSubmit={this.onSubmit}>\n              <div className=\"form-group\">\n                <TextAreaFieldGroup\n                  placeholder=\"Reply to post\"\n                  name=\"text\"\n                  value={this.state.text}\n                  errors={errors.text}\n                  onChange={this.onChange}\n                />\n              </div>\n              <button type=\"submit\" className=\"btn btn-dark\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  postId: PropTypes.string.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { addComment }\n)(CommentForm);\n"]},"metadata":{},"sourceType":"module"}