{"ast":null,"code":"import _classCallCheck from \"/home/sabbir/Downloads/bishudigital-master/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sabbir/Downloads/bishudigital-master/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sabbir/Downloads/bishudigital-master/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sabbir/Downloads/bishudigital-master/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sabbir/Downloads/bishudigital-master/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sabbir/Downloads/bishudigital-master/client/src/containers/profile/ProfileGithub.js\";\nimport React, { Component } from \"react\"; //import { Link } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\";\n\nvar ProfileGithub =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfileGithub, _Component);\n\n  function ProfileGithub(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileGithub);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfileGithub).call(this, props));\n    _this.state = {\n      clientId: \"58c689963234f6aa0c45\",\n      clientSecret: \"3eba0374f860058409532f0841d20f12d091e73f\",\n      count: 5,\n      sort: \"created : asc\",\n      repos: []\n    };\n    return _this;\n  }\n\n  _createClass(ProfileGithub, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var githubusername = this.props.githubusername;\n      var _this$state = this.state,\n          count = _this$state.count,\n          sort = _this$state.sort,\n          clientSecret = _this$state.clientSecret,\n          clientId = _this$state.clientId;\n      fetch(\"https://api.github.com/users/\".concat(githubusername, \"/repos?per_page=\").concat(count, \"&sort=\").concat(sort, \"&client_id=\").concat(clientId, \"&client_secret=\").concat(clientSecret)).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (_this2.refs.myRef) {\n          _this2.setState({\n            repos: data\n          });\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var repos = this.state.repos;\n      var repoItems = repos.map(function (repo) {\n        return React.createElement(\"div\", {\n          key: repo.id,\n          className: \"card card-body mb-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: repo.html_url,\n          className: \"text-info\",\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, repo.name)), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, repo.description)), React.createElement(\"div\", {\n          className: \"col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"badge badge-info mr-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Stars: \", repo.stargazers_count), React.createElement(\"span\", {\n          className: \"badge badge-secondary mr-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"Watchers: \", repo.watchers_count), React.createElement(\"span\", {\n          className: \"badge badge-success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Forks: \", repo.forks_count))));\n      });\n      return React.createElement(\"div\", {\n        ref: \"myRef\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        className: \"mb-\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Latest Github Repos\"), repoItems);\n    }\n  }]);\n\n  return ProfileGithub;\n}(Component);\n\nProfileGithub.propTypes = {\n  githubusername: PropTypes.string.isRequired\n};\nexport default ProfileGithub;","map":{"version":3,"sources":["/home/sabbir/Downloads/bishudigital-master/client/src/containers/profile/ProfileGithub.js"],"names":["React","Component","PropTypes","ProfileGithub","props","state","clientId","clientSecret","count","sort","repos","githubusername","fetch","then","res","json","data","refs","myRef","setState","catch","err","console","log","repoItems","map","repo","id","html_url","name","description","stargazers_count","watchers_count","forks_count","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n//import { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nclass ProfileGithub extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      clientId: \"58c689963234f6aa0c45\",\n      clientSecret: \"3eba0374f860058409532f0841d20f12d091e73f\",\n      count: 5,\n      sort: \"created : asc\",\n      repos: []\n    };\n  }\n\n  componentDidMount() {\n    const { githubusername } = this.props;\n    const { count, sort, clientSecret, clientId } = this.state;\n\n    fetch(\n      `https://api.github.com/users/${githubusername}/repos?per_page=${count}&sort=${sort}&client_id=${clientId}&client_secret=${clientSecret}`\n    )\n      .then(res => res.json())\n      .then(data => {\n        if (this.refs.myRef) {\n          this.setState({ repos: data });\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    const { repos } = this.state;\n\n    const repoItems = repos.map(repo => (\n      <div key={repo.id} className=\"card card-body mb-2\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <h4>\n              <a href={repo.html_url} className=\"text-info\" target=\"_blank\">\n                {repo.name}\n              </a>\n            </h4>\n            <p>{repo.description}</p>\n          </div>\n          <div className=\"col-md-6\">\n            <span className=\"badge badge-info mr-1\">\n              Stars: {repo.stargazers_count}\n            </span>\n            <span className=\"badge badge-secondary mr-1\">\n              Watchers: {repo.watchers_count}\n            </span>\n            <span className=\"badge badge-success\">\n              Forks: {repo.forks_count}\n            </span>\n          </div>\n        </div>\n      </div>\n    ));\n    return (\n      <div ref=\"myRef\">\n        <hr />\n        <h3 className=\"mb-\">Latest Github Repos</h3>\n        {repoItems}\n      </div>\n    );\n  }\n}\n\nProfileGithub.propTypes = {\n  githubusername: PropTypes.string.isRequired\n};\n\nexport default ProfileGithub;\n"]},"metadata":{},"sourceType":"module"}